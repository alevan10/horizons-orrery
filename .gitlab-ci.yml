# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: node:17

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"


# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - node_modules/

before_script:
  - npm install

stages:
  - Static Analysis
  - Tests
  - Build Prep
  - Build
  - Deploy

ESLint:
  stage: Static Analysis
  retry: 1
  script:
    - npm run lint

Typescript Compile Check:
  stage: Static Analysis
  retry: 1
  script:
    - npx tsc

Unit:
  stage: Tests
  retry: 1
  script:
    - npm run test
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml

Build_Test:
  stage: Tests
  retry: 1
  only:
    - merge_requests
  script:
    - npm run build
    - npm run start
  artifacts:
    when: always
    reports:
      junit:
        - junit.xml

Build_Prep:
  stage: Build Prep
  retry: 1
  only:
    - main
  script:
    - ORRERY_VERSION=$(node -e "console.log(require('./package.json').version);")
    - echo "ORRERY_VERSION" > VERSION
  artifacts:
    paths:
      - VERSION

Build:
  stage: Build
  retry: 1
  only:
    - main
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script: []
  dependencies:
    - Build_Prep
  script:
    - ORRERY_VERSION=$(cat VERSION)
    - mkdir -p /kaniko/.docker
    - >-
      /kaniko/executor
      --insecure
      --skip-tls-verify
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "levan.home:5000/horizons-orrery:${ORRERY_VERSION}"
      --build-arg PYPI_USER=$PYPI_USER
      --build-arg PYPI_PASSWORD=$PYPI_PASSWORD

Deploy:
  stage: Deploy
  retry: 1
  dependencies:
    - Build_Prep
  only:
    - main
  image: alpine/helm:3.8.1
  before_script: []
  script:
    - ORRERY_VERSION=$(cat VERSION)
    - helm upgrade horizons-orrery ./horizons-orrery --install --values=./horizons-orrery/values.yaml --namespace horizons --set image.tag=$HORIZONS_VERSION
